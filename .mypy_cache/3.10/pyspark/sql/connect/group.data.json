{".class": "MypyFile", "_fullname": "pyspark.sql.connect.group", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction", "pyspark.sql.connect.column.Column"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">", "name": "<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.sql.connect.group", "mro": ["pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">", "pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction", "types.FunctionType", "pyspark.sql.connect.column.Column", "builtins.object"], "names": {".class": "SymbolTable"}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">1": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction", "pyspark.sql.connect.column.Column"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">1", "name": "<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">", "type_vars": []}, "deletable_attributes": [], "flags": ["is_intersection"], "fullname": "pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">1", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.sql.connect.group", "mro": ["pyspark.sql.connect.group.<subclass of \"GroupedMapPandasUserDefinedFunction\" and \"Column\">1", "pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction", "types.FunctionType", "pyspark.sql.connect.column.Column", "builtins.object"], "names": {".class": "SymbolTable"}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "Column": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.column.Column", "kind": "Gdef"}, "DataFrame": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.dataframe.DataFrame", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "GroupedData": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.sql.connect.group.GroupedData", "name": "GroupedData", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.sql.connect.group", "mro": ["pyspark.sql.connect.group.GroupedData", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "df", "group_type", "grouping_cols", "pivot_col", "pivot_values"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "df", "group_type", "grouping_cols", "pivot_col", "pivot_values"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect.dataframe.DataFrame", "builtins.str", {".class": "Instance", "args": ["pyspark.sql.connect.column.Column"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["pyspark.sql.connect.column.Column", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.sql.connect._typing.LiteralType"}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of GroupedData", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_df": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData._df", "name": "_df", "type": "pyspark.sql.connect.dataframe.DataFrame"}}, "_group_type": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData._group_type", "name": "_group_type", "type": "builtins.str"}}, "_grouping_cols": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready", "is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData._grouping_cols", "name": "_grouping_cols", "type": {".class": "Instance", "args": ["pyspark.sql.connect.column.Column"], "type_ref": "builtins.list"}}}, "_numeric_agg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "function", "cols"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData._numeric_agg", "name": "_numeric_agg", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "function", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_numeric_agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_pivot_col": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready", "is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData._pivot_col", "name": "_pivot_col", "type": {".class": "UnionType", "items": ["pyspark.sql.connect.column.Column", {".class": "NoneType"}]}}}, "_pivot_values": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready", "is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData._pivot_values", "name": "_pivot_values", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}}}, "agg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "impl": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "exprs"], "flags": ["is_overload"], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "name": "agg", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "exprs"], "arg_types": ["pyspark.sql.connect.group.GroupedData", {".class": "UnionType", "items": ["pyspark.sql.connect.column.Column", {".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "builtins.dict"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "exprs"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "name": "agg", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "exprs"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect.column.Column"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "name": "agg", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", null], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "name": "agg", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", null], "arg_types": ["pyspark.sql.connect.group.GroupedData", {".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "builtins.dict"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.GroupedData.agg", "name": "agg", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "exprs"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect.column.Column"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", null], "arg_types": ["pyspark.sql.connect.group.GroupedData", {".class": "Instance", "args": ["builtins.str", "builtins.str"], "type_ref": "builtins.dict"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "agg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "apply": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "udf"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.apply", "name": "apply", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "udf"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "apply of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "applyInPandas": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "func", "schema"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.applyInPandas", "name": "applyInPandas", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "func", "schema"], "arg_types": ["pyspark.sql.connect.group.GroupedData", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.sql.connect._typing.PandasGroupedMapFunction"}, {".class": "UnionType", "items": ["pyspark.sql.types.StructType", "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "applyInPandas of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "applyInPandasWithState": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.applyInPandasWithState", "name": "applyInPandasWithState", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "arg_types": ["pyspark.sql.connect.group.GroupedData", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "applyInPandasWithState of GroupedData", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "avg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.avg", "name": "avg", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "avg of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "cogroup": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.cogroup", "name": "cogroup", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect.group.GroupedData"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "cogroup of GroupedData", "ret_type": "pyspark.sql.connect.group.PandasCogroupedOps", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "count": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.count", "name": "count", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.sql.connect.group.GroupedData"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "count of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "max": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.max", "name": "max", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "max of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "mean": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "pyspark.sql.connect.group.GroupedData.mean", "name": "mean", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "min": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.min", "name": "min", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "min of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "pivot": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["self", "pivot_col", "values"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.pivot", "name": "pivot", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "pivot_col", "values"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.sql.connect._typing.LiteralType"}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "pivot of GroupedData", "ret_type": "pyspark.sql.connect.group.GroupedData", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "sum": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "flags": [], "fullname": "pyspark.sql.connect.group.GroupedData.sum", "name": "sum", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "cols"], "arg_types": ["pyspark.sql.connect.group.GroupedData", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "sum of GroupedData", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "GroupedMapPandasUserDefinedFunction": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect._typing.GroupedMapPandasUserDefinedFunction", "kind": "Gdef"}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef"}, "LiteralType": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect._typing.LiteralType", "kind": "Gdef"}, "NumericType": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.types.NumericType", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "PandasCogroupedMapFunction": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect._typing.PandasCogroupedMapFunction", "kind": "Gdef"}, "PandasCogroupedOps": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.sql.connect.group.PandasCogroupedOps", "name": "PandasCogroupedOps", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.sql.connect.group", "mro": ["pyspark.sql.connect.group.PandasCogroupedOps", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "gd1", "gd2"], "flags": [], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "gd1", "gd2"], "arg_types": ["pyspark.sql.connect.group.PandasCogroupedOps", "pyspark.sql.connect.group.GroupedData", "pyspark.sql.connect.group.GroupedData"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of PandasCogroupedOps", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_extract_cols": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["gd"], "flags": ["is_static", "is_decorated"], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps._extract_cols", "name": "_extract_cols", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["gd"], "arg_types": ["pyspark.sql.connect.group.GroupedData"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_extract_cols of PandasCogroupedOps", "ret_type": {".class": "Instance", "args": ["pyspark.sql.connect.column.Column"], "type_ref": "builtins.list"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_staticmethod", "is_ready", "is_inferred"], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps._extract_cols", "name": "_extract_cols", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["gd"], "arg_types": ["pyspark.sql.connect.group.GroupedData"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_extract_cols of PandasCogroupedOps", "ret_type": {".class": "Instance", "args": ["pyspark.sql.connect.column.Column"], "type_ref": "builtins.list"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "_gd1": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps._gd1", "name": "_gd1", "type": "pyspark.sql.connect.group.GroupedData"}}, "_gd2": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps._gd2", "name": "_gd2", "type": "pyspark.sql.connect.group.GroupedData"}}, "applyInPandas": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "func", "schema"], "flags": [], "fullname": "pyspark.sql.connect.group.PandasCogroupedOps.applyInPandas", "name": "applyInPandas", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "func", "schema"], "arg_types": ["pyspark.sql.connect.group.PandasCogroupedOps", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.sql.connect._typing.PandasCogroupedMapFunction"}, {".class": "UnionType", "items": ["pyspark.sql.types.StructType", "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "applyInPandas of PandasCogroupedOps", "ret_type": "pyspark.sql.connect.dataframe.DataFrame", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "PandasGroupedMapFunction": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect._typing.PandasGroupedMapFunction", "kind": "Gdef"}, "PySparkGroupedData": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.group.GroupedData", "kind": "Gdef"}, "PySparkPandasCogroupedOps": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.pandas.group_ops.PandasCogroupedOps", "kind": "Gdef"}, "PythonEvalType": {".class": "SymbolTableNode", "cross_ref": "pyspark.rdd.PythonEvalType", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "StructType": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.types.StructType", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.sql.connect.group.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.sql.connect.group.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.sql.connect.group.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.sql.connect.group.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.sql.connect.group.__package__", "name": "__package__", "type": "builtins.str"}}, "_invoke_function": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.functions._invoke_function", "kind": "Gdef"}, "_test": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "pyspark.sql.connect.group._test", "name": "_test", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_test", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "cast": {".class": "SymbolTableNode", "cross_ref": "typing.cast", "kind": "Gdef"}, "check_dependencies": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.utils.check_dependencies", "kind": "Gdef"}, "col": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.functions.col", "kind": "Gdef"}, "lit": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.functions.lit", "kind": "Gdef"}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef"}, "plan": {".class": "SymbolTableNode", "cross_ref": "pyspark.sql.connect.plan", "kind": "Gdef"}, "warnings": {".class": "SymbolTableNode", "cross_ref": "warnings", "kind": "Gdef"}}, "path": "C:\\Users\\Egor\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pyspark\\sql\\connect\\group.py"}