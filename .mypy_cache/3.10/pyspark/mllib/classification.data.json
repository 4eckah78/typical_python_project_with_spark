{".class": "MypyFile", "_fullname": "pyspark.mllib.classification", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_public": false}, "DStream": {".class": "SymbolTableNode", "cross_ref": "pyspark.streaming.dstream.DStream", "kind": "Gdef", "module_public": false}, "Iterable": {".class": "SymbolTableNode", "cross_ref": "typing.Iterable", "kind": "Gdef", "module_public": false}, "LabeledPoint": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.regression.LabeledPoint", "kind": "Gdef", "module_public": false}, "LinearClassificationModel": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.mllib.regression.LinearModel"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.LinearClassificationModel", "name": "LinearClassificationModel", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.LinearClassificationModel", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.LinearClassificationModel", "pyspark.mllib.regression.LinearModel", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "weights", "intercept"], "flags": [], "fullname": "pyspark.mllib.classification.LinearClassificationModel.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "weights", "intercept"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", "pyspark.mllib.linalg.Vector", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LinearClassificationModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_threshold": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel._threshold", "name": "_threshold", "type": {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}}}, "clearThreshold": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.clearThreshold", "name": "clearThreshold", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "clearThreshold of LinearClassificationModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.clearThreshold", "name": "clearThreshold", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "clearThreshold of LinearClassificationModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "predict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "impl": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "test"], "flags": ["is_overload"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "test"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LinearClassificationModel", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "test"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "test"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LinearClassificationModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "name": "predict", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "test"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "test"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LinearClassificationModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.predict", "name": "predict", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "test"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LinearClassificationModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "test"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LinearClassificationModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "setThreshold": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.setThreshold", "name": "setThreshold", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "setThreshold of LinearClassificationModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.setThreshold", "name": "setThreshold", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "setThreshold of LinearClassificationModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "threshold": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.threshold", "name": "threshold", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "threshold of LinearClassificationModel", "ret_type": {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LinearClassificationModel.threshold", "name": "threshold", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LinearClassificationModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "threshold of LinearClassificationModel", "ret_type": {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LinearModel": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.regression.LinearModel", "kind": "Gdef", "module_public": false}, "Loader": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.util.Loader", "kind": "Gdef", "module_public": false}, "LogisticRegressionModel": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.mllib.classification.LinearClassificationModel"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.LogisticRegressionModel", "name": "LogisticRegressionModel", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionModel", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.LogisticRegressionModel", "pyspark.mllib.classification.LinearClassificationModel", "pyspark.mllib.regression.LinearModel", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "weights", "intercept", "numFeatures", "numClasses"], "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0], "arg_names": ["self", "weights", "intercept", "numFeatures", "numClasses"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", "pyspark.mllib.linalg.Vector", "builtins.float", "builtins.int", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LogisticRegressionModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "__repr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": [null], "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.__repr__", "name": "__repr__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__repr__ of LogisticRegressionModel", "ret_type": "builtins.str", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_dataWithBiasSize": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel._dataWithBiasSize", "name": "_dataWithBiasSize", "type": {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 5}, "type_of_any": 7}, {".class": "NoneType"}]}}}, "_numClasses": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel._numClasses", "name": "_numClasses", "type": "builtins.int"}}, "_numFeatures": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel._numFeatures", "name": "_numFeatures", "type": "builtins.int"}}, "_weightsMatrix": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel._weightsMatrix", "name": "_weightsMatrix", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, {".class": "NoneType"}]}}}, "load": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of LogisticRegressionModel", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of LogisticRegressionModel", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "numClasses": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.numClasses", "name": "numClasses", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "numClasses of LogisticRegressionModel", "ret_type": "builtins.int", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.numClasses", "name": "numClasses", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "numClasses of LogisticRegressionModel", "ret_type": "builtins.int", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "numFeatures": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.numFeatures", "name": "numFeatures", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "numFeatures of LogisticRegressionModel", "ret_type": "builtins.int", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.numFeatures", "name": "numFeatures", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "numFeatures of LogisticRegressionModel", "ret_type": "builtins.int", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "predict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "impl": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LogisticRegressionModel", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LogisticRegressionModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "name": "predict", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LogisticRegressionModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.predict", "name": "predict", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LogisticRegressionModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of LogisticRegressionModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "save": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.save", "name": "save", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "save of LogisticRegressionModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionModel.save", "name": "save", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "arg_types": ["pyspark.mllib.classification.LogisticRegressionModel", "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "save of LogisticRegressionModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LogisticRegressionWithLBFGS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.LogisticRegressionWithLBFGS", "name": "LogisticRegressionWithLBFGS", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionWithLBFGS", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.LogisticRegressionWithLBFGS", "builtins.object"], "names": {".class": "SymbolTable", "train": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "initialWeights", "regParam", "regType", "intercept", "corrections", "tolerance", "validateData", "numClasses"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionWithLBFGS.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "initialWeights", "regParam", "regType", "intercept", "corrections", "tolerance", "validateData", "numClasses"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionWithLBFGS"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.float", "builtins.str", "builtins.bool", "builtins.int", "builtins.float", "builtins.bool", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of LogisticRegressionWithLBFGS", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionWithLBFGS.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "initialWeights", "regParam", "regType", "intercept", "corrections", "tolerance", "validateData", "numClasses"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionWithLBFGS"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.float", "builtins.str", "builtins.bool", "builtins.int", "builtins.float", "builtins.bool", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of LogisticRegressionWithLBFGS", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LogisticRegressionWithSGD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.LogisticRegressionWithSGD", "name": "LogisticRegressionWithSGD", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.LogisticRegressionWithSGD", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.LogisticRegressionWithSGD", "builtins.object"], "names": {".class": "SymbolTable", "train": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "miniBatchFraction", "initialWeights", "regParam", "regType", "intercept", "validateData", "convergenceTol"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.LogisticRegressionWithSGD.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "miniBatchFraction", "initialWeights", "regParam", "regType", "intercept", "validateData", "convergenceTol"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionWithSGD"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float", "builtins.float", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.float", "builtins.str", "builtins.bool", "builtins.bool", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of LogisticRegressionWithSGD", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.LogisticRegressionWithSGD.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "miniBatchFraction", "initialWeights", "regParam", "regType", "intercept", "validateData", "convergenceTol"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.LogisticRegressionWithSGD"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float", "builtins.float", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.float", "builtins.str", "builtins.bool", "builtins.bool", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of LogisticRegressionWithSGD", "ret_type": "pyspark.mllib.classification.LogisticRegressionModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NaiveBayes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.NaiveBayes", "name": "NaiveBayes", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.NaiveBayes", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.NaiveBayes", "builtins.object"], "names": {".class": "SymbolTable", "train": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1], "arg_names": ["cls", "data", "lambda_"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.NaiveBayes.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "data", "lambda_"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.NaiveBayes"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of NaiveBayes", "ret_type": "pyspark.mllib.classification.NaiveBayesModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayes.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "data", "lambda_"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.NaiveBayes"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of NaiveBayes", "ret_type": "pyspark.mllib.classification.NaiveBayesModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NaiveBayesModel": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.mllib.util.Saveable", {".class": "Instance", "args": ["pyspark.mllib.classification.NaiveBayesModel"], "type_ref": "pyspark.mllib.util.Loader"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.NaiveBayesModel", "name": "NaiveBayesModel", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.NaiveBayesModel", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.NaiveBayesModel", "pyspark.mllib.util.Saveable", "pyspark.mllib.util.Loader", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "labels", "pi", "theta"], "flags": [], "fullname": "pyspark.mllib.classification.NaiveBayesModel.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "labels", "pi", "theta"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of NaiveBayesModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "labels": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.labels", "name": "labels", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}}}, "load": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.NaiveBayesModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of NaiveBayesModel", "ret_type": "pyspark.mllib.classification.NaiveBayesModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.NaiveBayesModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of NaiveBayesModel", "ret_type": "pyspark.mllib.classification.NaiveBayesModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "pi": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.pi", "name": "pi", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}}}, "predict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "impl": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}], "type_ref": "pyspark.rdd.RDD"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}], "type_ref": "pyspark.rdd.RDD"}]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.predict", "name": "predict", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}, "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of NaiveBayesModel", "ret_type": {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "numpy.float64"}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "save": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "flags": [], "fullname": "pyspark.mllib.classification.NaiveBayesModel.save", "name": "save", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "arg_types": ["pyspark.mllib.classification.NaiveBayesModel", "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "save of NaiveBayesModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "theta": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.NaiveBayesModel.theta", "name": "theta", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_public": false}, "RDD": {".class": "SymbolTableNode", "cross_ref": "pyspark.rdd.RDD", "kind": "Gdef", "module_public": false}, "SVMModel": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.mllib.classification.LinearClassificationModel"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.SVMModel", "name": "SVMModel", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.SVMModel", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.SVMModel", "pyspark.mllib.classification.LinearClassificationModel", "pyspark.mllib.regression.LinearModel", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "weights", "intercept"], "flags": [], "fullname": "pyspark.mllib.classification.SVMModel.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "weights", "intercept"], "arg_types": ["pyspark.mllib.classification.SVMModel", "pyspark.mllib.linalg.Vector", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SVMModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "load": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.SVMModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.SVMModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of SVMModel", "ret_type": "pyspark.mllib.classification.SVMModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.SVMModel.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "sc", "path"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.SVMModel"}, "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "load of SVMModel", "ret_type": "pyspark.mllib.classification.SVMModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "predict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "pyspark.mllib.classification.SVMModel.predict", "impl": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload"], "fullname": "pyspark.mllib.classification.SVMModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.SVMModel", {".class": "UnionType", "items": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}, {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of SVMModel", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.SVMModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.SVMModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of SVMModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.SVMModel.predict", "name": "predict", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "x"], "flags": ["is_overload", "is_decorated"], "fullname": "pyspark.mllib.classification.SVMModel.predict", "name": "predict", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.SVMModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of SVMModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.SVMModel.predict", "name": "predict", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.SVMModel", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of SVMModel", "ret_type": {".class": "UnionType", "items": ["builtins.int", "builtins.float"]}, "type_guard": null, "unpack_kwargs": false, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "x"], "arg_types": ["pyspark.mllib.classification.SVMModel", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "type_ref": "pyspark.rdd.RDD"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "predict of SVMModel", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.float"]}], "type_ref": "pyspark.rdd.RDD"}, "type_guard": null, "unpack_kwargs": false, "variables": []}]}}}, "save": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.SVMModel.save", "name": "save", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "arg_types": ["pyspark.mllib.classification.SVMModel", "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "save of SVMModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.SVMModel.save", "name": "save", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "sc", "path"], "arg_types": ["pyspark.mllib.classification.SVMModel", "pyspark.context.SparkContext", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "save of SVMModel", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SVMWithSGD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.SVMWithSGD", "name": "SVMWithSGD", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.SVMWithSGD", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.SVMWithSGD", "builtins.object"], "names": {".class": "SymbolTable", "train": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "regParam", "miniBatchFraction", "initialWeights", "regType", "intercept", "validateData", "convergenceTol"], "flags": ["is_class", "is_decorated"], "fullname": "pyspark.mllib.classification.SVMWithSGD.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "regParam", "miniBatchFraction", "initialWeights", "regType", "intercept", "validateData", "convergenceTol"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.SVMWithSGD"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float", "builtins.float", "builtins.float", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.str", "builtins.bool", "builtins.bool", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of SVMWithSGD", "ret_type": "pyspark.mllib.classification.SVMModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.SVMWithSGD.train", "name": "train", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["cls", "data", "iterations", "step", "regParam", "miniBatchFraction", "initialWeights", "regType", "intercept", "validateData", "convergenceTol"], "arg_types": [{".class": "TypeType", "item": "pyspark.mllib.classification.SVMWithSGD"}, {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.rdd.RDD"}, "builtins.int", "builtins.float", "builtins.float", "builtins.float", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "numpy.ndarray"}, "pyspark.mllib.linalg.Vector", {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.list"}, {".class": "Instance", "args": ["builtins.float"], "type_ref": "builtins.tuple"}, {".class": "NoneType"}]}, "builtins.str", "builtins.bool", "builtins.bool", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "train of SVMWithSGD", "ret_type": "pyspark.mllib.classification.SVMModel", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Saveable": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.util.Saveable", "kind": "Gdef", "module_public": false}, "SparkContext": {".class": "SymbolTableNode", "cross_ref": "pyspark.context.SparkContext", "kind": "Gdef", "module_public": false}, "StreamingLinearAlgorithm": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.regression.StreamingLinearAlgorithm", "kind": "Gdef", "module_public": false}, "StreamingLogisticRegressionWithSGD": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["pyspark.mllib.regression.StreamingLinearAlgorithm"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "name": "StreamingLogisticRegressionWithSGD", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "pyspark.mllib.classification", "mro": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "pyspark.mllib.regression.StreamingLinearAlgorithm", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "stepSize", "numIterations", "miniBatchFraction", "regParam", "convergenceTol"], "flags": [], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "stepSize", "numIterations", "miniBatchFraction", "regParam", "convergenceTol"], "arg_types": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "builtins.float", "builtins.int", "builtins.float", "builtins.float", "builtins.float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of StreamingLogisticRegressionWithSGD", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_model": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["explicit_self_type", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD._model", "name": "_model", "type": {".class": "UnionType", "items": ["pyspark.mllib.classification.LogisticRegressionModel", {".class": "NoneType"}]}}}, "convergenceTol": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.convergenceTol", "name": "convergenceTol", "type": "builtins.float"}}, "miniBatchFraction": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.miniBatchFraction", "name": "miniBatchFraction", "type": "builtins.float"}}, "numIterations": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.numIterations", "name": "numIterations", "type": "builtins.int"}}, "regParam": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.regParam", "name": "regParam", "type": "builtins.float"}}, "setInitialWeights": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "initialWeights"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.setInitialWeights", "name": "setInitialWeights", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "initialWeights"], "arg_types": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "setInitialWeights of StreamingLogisticRegressionWithSGD", "ret_type": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.setInitialWeights", "name": "setInitialWeights", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "initialWeights"], "arg_types": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", {".class": "TypeAliasType", "args": [], "type_ref": "pyspark.mllib._typing.VectorLike"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "setInitialWeights of StreamingLogisticRegressionWithSGD", "ret_type": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "stepSize": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.stepSize", "name": "stepSize", "type": "builtins.float"}}, "trainOn": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "dstream"], "flags": ["is_decorated"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.trainOn", "name": "trainOn", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dstream"], "arg_types": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.streaming.dstream.DStream"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "trainOn of StreamingLogisticRegressionWithSGD", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.trainOn", "name": "trainOn", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dstream"], "arg_types": ["pyspark.mllib.classification.StreamingLogisticRegressionWithSGD", {".class": "Instance", "args": ["pyspark.mllib.regression.LabeledPoint"], "type_ref": "pyspark.streaming.dstream.DStream"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "trainOn of StreamingLogisticRegressionWithSGD", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef", "module_public": false}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_public": false}, "Vector": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.linalg.Vector", "kind": "Gdef", "module_public": false}, "VectorLike": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib._typing.VectorLike", "kind": "Gdef", "module_public": false}, "__all__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_inferred", "has_explicit_value"], "fullname": "pyspark.mllib.classification.__all__", "name": "__all__", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.mllib.classification.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.mllib.classification.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.mllib.classification.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.mllib.classification.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "pyspark.mllib.classification.__package__", "name": "__package__", "type": "builtins.str"}}, "_convert_to_vector": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.linalg._convert_to_vector", "kind": "Gdef", "module_public": false}, "_java2py": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.common._java2py", "kind": "Gdef", "module_public": false}, "_py2java": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.common._py2java", "kind": "Gdef", "module_public": false}, "_regression_train_wrapper": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.regression._regression_train_wrapper", "kind": "Gdef", "module_public": false}, "_test": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "pyspark.mllib.classification._test", "name": "_test", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_test", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "callMLlibFunc": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.common.callMLlibFunc", "kind": "Gdef", "module_public": false}, "exp": {".class": "SymbolTableNode", "cross_ref": "math.exp", "kind": "Gdef", "module_public": false}, "inherit_doc": {".class": "SymbolTableNode", "cross_ref": "pyspark.mllib.common.inherit_doc", "kind": "Gdef", "module_public": false}, "numpy": {".class": "SymbolTableNode", "cross_ref": "numpy", "kind": "Gdef", "module_public": false}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef", "module_public": false}, "since": {".class": "SymbolTableNode", "cross_ref": "pyspark.since", "kind": "Gdef", "module_public": false}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef", "module_public": false}, "warnings": {".class": "SymbolTableNode", "cross_ref": "warnings", "kind": "Gdef", "module_public": false}}, "path": "C:\\Users\\Egor\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pyspark\\mllib\\classification.py"}